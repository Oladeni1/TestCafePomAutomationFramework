"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assignable_1 = __importDefault(require("../../utils/assignable"));
const generate_id_1 = __importDefault(require("./generate-id"));
class DriverStatus extends assignable_1.default {
    constructor(obj) {
        super(obj);
        this.id = (0, generate_id_1.default)();
        this.isCommandResult = false;
        this.executionError = null;
        this.pageError = null;
        this.resent = false;
        this.result = null;
        this.consoleMessages = null;
        this.isPendingWindowSwitching = false;
        this.isObservingFileDownloadingInNewWindow = false;
        this.isFirstRequestAfterWindowSwitching = false;
        this.debug = '';
        this._assignFrom(obj, true);
    }
    _getAssignableProperties() {
        return [
            { name: 'isCommandResult' },
            { name: 'executionError' },
            { name: 'pageError' },
            { name: 'result' },
            { name: 'consoleMessages' },
            { name: 'isPendingWindowSwitching' },
            { name: 'isObservingFileDownloadingInNewWindow' },
            { name: 'isFirstRequestAfterWindowSwitching' },
        ];
    }
}
exports.default = DriverStatus;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdHVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NsaWVudC9kcml2ZXIvc3RhdHVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsd0VBQWdEO0FBQ2hELGdFQUF1QztBQUd2QyxNQUFxQixZQUFhLFNBQVEsb0JBQVU7SUFDaEQsWUFBYSxHQUFHO1FBQ1osS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRVgsSUFBSSxDQUFDLEVBQUUsR0FBc0MsSUFBQSxxQkFBVSxHQUFFLENBQUM7UUFDMUQsSUFBSSxDQUFDLGVBQWUsR0FBeUIsS0FBSyxDQUFDO1FBQ25ELElBQUksQ0FBQyxjQUFjLEdBQTBCLElBQUksQ0FBQztRQUNsRCxJQUFJLENBQUMsU0FBUyxHQUErQixJQUFJLENBQUM7UUFDbEQsSUFBSSxDQUFDLE1BQU0sR0FBa0MsS0FBSyxDQUFDO1FBQ25ELElBQUksQ0FBQyxNQUFNLEdBQWtDLElBQUksQ0FBQztRQUNsRCxJQUFJLENBQUMsZUFBZSxHQUF5QixJQUFJLENBQUM7UUFDbEQsSUFBSSxDQUFDLHdCQUF3QixHQUFnQixLQUFLLENBQUM7UUFDbkQsSUFBSSxDQUFDLHFDQUFxQyxHQUFHLEtBQUssQ0FBQztRQUNuRCxJQUFJLENBQUMsa0NBQWtDLEdBQU0sS0FBSyxDQUFDO1FBQ25ELElBQUksQ0FBQyxLQUFLLEdBQW1DLEVBQUUsQ0FBQztRQUVoRCxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsd0JBQXdCO1FBQ3BCLE9BQU87WUFDSCxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRTtZQUMzQixFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRTtZQUMxQixFQUFFLElBQUksRUFBRSxXQUFXLEVBQUU7WUFDckIsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFO1lBQ2xCLEVBQUUsSUFBSSxFQUFFLGlCQUFpQixFQUFFO1lBQzNCLEVBQUUsSUFBSSxFQUFFLDBCQUEwQixFQUFFO1lBQ3BDLEVBQUUsSUFBSSxFQUFFLHVDQUF1QyxFQUFFO1lBQ2pELEVBQUUsSUFBSSxFQUFFLG9DQUFvQyxFQUFFO1NBQ2pELENBQUM7SUFDTixDQUFDO0NBQ0o7QUEvQkQsK0JBK0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFzc2lnbmFibGUgZnJvbSAnLi4vLi4vdXRpbHMvYXNzaWduYWJsZSc7XG5pbXBvcnQgZ2VuZXJhdGVJZCBmcm9tICcuL2dlbmVyYXRlLWlkJztcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEcml2ZXJTdGF0dXMgZXh0ZW5kcyBBc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3RvciAob2JqKSB7XG4gICAgICAgIHN1cGVyKG9iaik7XG5cbiAgICAgICAgdGhpcy5pZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gZ2VuZXJhdGVJZCgpO1xuICAgICAgICB0aGlzLmlzQ29tbWFuZFJlc3VsdCAgICAgICAgICAgICAgICAgICAgICAgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5leGVjdXRpb25FcnJvciAgICAgICAgICAgICAgICAgICAgICAgID0gbnVsbDtcbiAgICAgICAgdGhpcy5wYWdlRXJyb3IgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gbnVsbDtcbiAgICAgICAgdGhpcy5yZXNlbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmVzdWx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9IG51bGw7XG4gICAgICAgIHRoaXMuY29uc29sZU1lc3NhZ2VzICAgICAgICAgICAgICAgICAgICAgICA9IG51bGw7XG4gICAgICAgIHRoaXMuaXNQZW5kaW5nV2luZG93U3dpdGNoaW5nICAgICAgICAgICAgICA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzT2JzZXJ2aW5nRmlsZURvd25sb2FkaW5nSW5OZXdXaW5kb3cgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pc0ZpcnN0UmVxdWVzdEFmdGVyV2luZG93U3dpdGNoaW5nICAgID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZGVidWcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9ICcnO1xuXG4gICAgICAgIHRoaXMuX2Fzc2lnbkZyb20ob2JqLCB0cnVlKTtcbiAgICB9XG5cbiAgICBfZ2V0QXNzaWduYWJsZVByb3BlcnRpZXMgKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgeyBuYW1lOiAnaXNDb21tYW5kUmVzdWx0JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnZXhlY3V0aW9uRXJyb3InIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdwYWdlRXJyb3InIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdyZXN1bHQnIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdjb25zb2xlTWVzc2FnZXMnIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdpc1BlbmRpbmdXaW5kb3dTd2l0Y2hpbmcnIH0sXG4gICAgICAgICAgICB7IG5hbWU6ICdpc09ic2VydmluZ0ZpbGVEb3dubG9hZGluZ0luTmV3V2luZG93JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnaXNGaXJzdFJlcXVlc3RBZnRlcldpbmRvd1N3aXRjaGluZycgfSxcbiAgICAgICAgXTtcbiAgICB9XG59XG4iXX0=